name: Check code sanity

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Build Next.js app
        uses: actions/checkout@v4
      - name: Set MongoDB URI
        run: echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> .env
      - name: Set MongoDB DB
        run: echo "MONGODB_DB=sparked-next" >> .env
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install --frozen-lockfile
      - run: yarn lint
      - name: Run Playwright Tests
        run: yarn playwright test
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
          EMAIL_SERVER: ${{ secrets.EMAIL_SERVER }}
          MONGODB_DB: ${{ secrets.MONGODB_DB }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          REALM_APP_ID: ${{ secrets.REALM_APP_ID }}
      - name: Create Local Build
        if: steps.tests.outcome == 'success'
        id: build
        run: yarn build
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
          EMAIL_SERVER: ${{ secrets.EMAIL_SERVER }}
          MONGODB_DB: ${{ secrets.MONGODB_DB }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          REALM_APP_ID: ${{ secrets.REALM_APP_ID }}
